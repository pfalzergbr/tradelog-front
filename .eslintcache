[{"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\index.js":"1","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\App.js":"2","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Context\\MainContext.js":"3","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Routers\\AppRouter.js":"4","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Hooks\\useAuthentication.js":"5","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Dashboard.js":"6","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Performance.js":"7","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Trades.js":"8","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\TradeDetails.js":"9","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Landing.js":"10","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Login.js":"11","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Register.js":"12","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\AccountDetails.js":"13","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Accounts.js":"14","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Profile.js":"15","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\NotFound.js":"16","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Strategies.js":"17","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Nav.js":"18","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Hooks\\usePagination.js":"19","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Loading.js":"20","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Footer.js":"21","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\UI\\ErrorMessage.js":"22","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\UI\\Pagination.js":"23","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Modals\\EditAccount.js":"24","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Modals\\DeleteModal.js":"25","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Modals\\NewAccount.js":"26","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\UI\\PaginatedData.js":"27","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\TradeItem.js":"28","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Hooks\\useRequest.js":"29","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Reducers\\tradeReducer.js":"30","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Reducers\\authReducer.js":"31","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\constants.js":"32","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Store\\store.js":"33","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Modals\\NewTrade.js":"34","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\accountActions.js":"35","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\authActions.js":"36","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Services\\authService.js":"37","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Services\\storageService.js":"38"},{"size":289,"mtime":1605800201458,"results":"39","hashOfConfig":"40"},{"size":564,"mtime":1607421786974,"results":"41","hashOfConfig":"40"},{"size":989,"mtime":1607342879209,"results":"42","hashOfConfig":"40"},{"size":3267,"mtime":1607418723029,"results":"43","hashOfConfig":"40"},{"size":2465,"mtime":1607333214178,"results":"44","hashOfConfig":"40"},{"size":746,"mtime":1607421599718,"results":"45","hashOfConfig":"40"},{"size":304,"mtime":1604931881729,"results":"46","hashOfConfig":"40"},{"size":2316,"mtime":1607421757460,"results":"47","hashOfConfig":"40"},{"size":3597,"mtime":1607421722290,"results":"48","hashOfConfig":"40"},{"size":397,"mtime":1606057550796,"results":"49","hashOfConfig":"40"},{"size":3083,"mtime":1607420499703,"results":"50","hashOfConfig":"40"},{"size":5000,"mtime":1607421060502,"results":"51","hashOfConfig":"40"},{"size":4341,"mtime":1607421522394,"results":"52","hashOfConfig":"40"},{"size":2378,"mtime":1607421567691,"results":"53","hashOfConfig":"40"},{"size":5609,"mtime":1607421803871,"results":"54","hashOfConfig":"40"},{"size":118,"mtime":1604946717477,"results":"55","hashOfConfig":"40"},{"size":134,"mtime":1604934800197,"results":"56","hashOfConfig":"40"},{"size":1830,"mtime":1607419962719,"results":"57","hashOfConfig":"40"},{"size":1129,"mtime":1605521627365,"results":"58","hashOfConfig":"40"},{"size":177,"mtime":1605369393715,"results":"59","hashOfConfig":"40"},{"size":710,"mtime":1606039159500,"results":"60","hashOfConfig":"40"},{"size":213,"mtime":1605120318579,"results":"61","hashOfConfig":"40"},{"size":914,"mtime":1605552445405,"results":"62","hashOfConfig":"40"},{"size":3102,"mtime":1607421280921,"results":"63","hashOfConfig":"40"},{"size":1121,"mtime":1605775139930,"results":"64","hashOfConfig":"40"},{"size":3413,"mtime":1607421339066,"results":"65","hashOfConfig":"40"},{"size":557,"mtime":1605600965620,"results":"66","hashOfConfig":"40"},{"size":290,"mtime":1607333491517,"results":"67","hashOfConfig":"40"},{"size":1120,"mtime":1607332438938,"results":"68","hashOfConfig":"40"},{"size":355,"mtime":1605102741368,"results":"69","hashOfConfig":"40"},{"size":869,"mtime":1607419430411,"results":"70","hashOfConfig":"40"},{"size":171,"mtime":1607338795565,"results":"71","hashOfConfig":"40"},{"size":519,"mtime":1607417640906,"results":"72","hashOfConfig":"40"},{"size":5238,"mtime":1607421383450,"results":"73","hashOfConfig":"40"},{"size":0,"mtime":1607337784404,"results":"74","hashOfConfig":"40"},{"size":747,"mtime":1607420969938,"results":"75","hashOfConfig":"40"},{"size":334,"mtime":1607420568064,"results":"76","hashOfConfig":"40"},{"size":229,"mtime":1607416151485,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"13m6jtx",{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\index.js",[],["163","164"],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\App.js",["165"],"import React from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { store } from \"./Redux/Store/store\";\r\nimport { Provider } from 'react-redux';\r\nimport { MainContextProvider } from './Context/MainContext';\r\nimport AppRouter from './Routers/AppRouter';\r\n\r\nconst App = () => {\r\n    return (\r\n        //TODO - Remove contextprovider when ready\r\n        <Provider store={store}>\r\n            <ToastContainer />\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Context\\MainContext.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Routers\\AppRouter.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Hooks\\useAuthentication.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Dashboard.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Performance.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Trades.js",["166"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nimport { usePagination } from '../Hooks/usePagination';\r\nimport Pagination from '../Components/UI/Pagination';\r\n\r\nimport Loading from '../Components/Loading';\r\nimport { useSelector } from 'react-redux';\r\nimport { useRequest } from '../Hooks/useRequest';\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst Trades = (props) => {\r\n    const { user, token } = useSelector(state => state.authReducer);\r\n    const [ account, setAccount ] = useState( user.accounts[0]._id || null);\r\n    const { isLoading, sendRequest } = useRequest();\r\n    const { paginate, paginatedData, pageNumbers } = usePagination();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const fetchTrades = async () => {\r\n            try {\r\n                const response = await sendRequest(\r\n                    `${API}/api/trades/account/${account}`,\r\n                    'GET',\r\n                    {},\r\n                    { Authorization: `Bearer ${token}` },\r\n                );\r\n\r\n                paginate(response.data, 5);\r\n                history.push(`/${user.userId}/trades/page-1`);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchTrades();\r\n    }, [account, history, paginate, sendRequest, token, user.userId]);\r\n\r\n    const changeAccount = (event) => {\r\n        setAccount(event.target.value);\r\n    } \r\n\r\n    return (\r\n        <React.Fragment>\r\n            { account ? <select value={account} onChange={changeAccount}>\r\n                {user.accounts.map(account => <option key={account._id} value={account._id}>{account.accountName}</option>)}\r\n            </select>\r\n            : <div><p>You haven`t got any accounts yet</p><Link to={`/${user.userId}/accounts`}>Create one here</Link></div>}\r\n            {isLoading && <Loading />}\r\n            {!isLoading && (\r\n                <div>\r\n                    <Pagination\r\n                        data={paginatedData}\r\n                        pageNumbers={pageNumbers}\r\n                        userId={user.userId}\r\n                        itemType={'trade'}\r\n                    />\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Trades;\r\n","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\TradeDetails.js",["167"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\n\r\nimport Loading from '../Components/Loading';\r\nimport DeleteModal from '../Components/Modals/DeleteModal';\r\nimport { useSelector } from 'react-redux';\r\nimport { useRequest } from '../Hooks/useRequest';\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst TradeDetails = (props) => {\r\n    const { token, user } = useSelector(state => state.authReducer);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const { isLoading, sendRequest } = useRequest();\r\n    const [ trade, setTrade] = useState({});\r\n    const { tradeId } = useParams();\r\n    const { symbol, outcome, amount } = trade;\r\n    const history = useHistory();\r\n\r\n    //Modal Data passed in the Delete Modal.\r\n    const modalData = {\r\n        header: `Warning`,\r\n        message: ' Please only delete the trade if you had an input mistake. Deleting trades from your record changes your statistics, and distorts your real performance.',\r\n        note: 'Note: You cannot reverse this action once you deleted the trade',\r\n        label: 'Yes, I want to delete this trade',\r\n        button: 'Delete'\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTrade = async () => {\r\n            try {\r\n                const response = await sendRequest(\r\n                    `${API}/api/trades/${tradeId}`,\r\n                    'GET',\r\n                    {},\r\n                    {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                );\r\n                setTrade(response.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        fetchTrade();\r\n    }, [sendRequest, token, tradeId]);\r\n\r\n    //Sends a delete trade request to the API. Passed down and called in the Modal.\r\n    const handleDelete = async () => {\r\n        try {\r\n            const response = await sendRequest(\r\n                `http://localhost:3000/api/trades/${tradeId}`,\r\n                'DELETE',\r\n                {},\r\n\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            );\r\n            history.replace(`/${user.userId}/trades/`);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    //Modal Open-Close Handlers\r\n    const openModal = () => {\r\n        setModalIsOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { isLoading && <Loading />}\r\n            { !isLoading && <div>\r\n                <Modal isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n                    <DeleteModal\r\n                        closeModal={closeModal}\r\n                        onDelete={handleDelete}\r\n                        modalData={modalData}\r\n                    />\r\n                </Modal>\r\n                <h1>TradeDetails</h1>\r\n                <h2>{symbol}</h2>\r\n                <p>{outcome}</p>\r\n                <span>{amount}</span>\r\n                <button>Edit Details</button>\r\n                <button\r\n                    onClick={() => {\r\n                        history.go(-1);\r\n                    }}>\r\n                    Back\r\n                </button>\r\n                <button onClick={openModal}>Delete</button>\r\n            </div>}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TradeDetails;\r\n","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Landing.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Login.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Register.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\AccountDetails.js",["168","169"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\n\r\nimport DeleteModal from '../Components/Modals/DeleteModal'\r\nimport EditAccount from '../Components/Modals/EditAccount';\r\nimport Loading from '../Components/Loading';\r\nimport { useSelector } from 'react-redux';\r\nimport { useRequest } from '../Hooks/useRequest';\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst AccountDetails = (props) => {\r\n    const { token, user } = useSelector(state => state.authReducer);\r\n    const [editModalIsOpen, setEditModalIsOpen] = useState(false);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [account, setAccount] = useState({});\r\n    const { isLoading, sendRequest } = useRequest();\r\n    const { accountId } = useParams();\r\n    const { accountName, balance, description, strategies } = account;\r\n    const history = useHistory();\r\n\r\n    //Data to pass in the Delete Modal\r\n    const modalData = {\r\n        header: `You are trying to delete your ${accountName} account.`,\r\n        message:  'You are trying to delete this account. Once it is deleted, this action cannot be reversed. All trades associated with this account will be permanently deleted.',\r\n        label: 'Yes, I am sure I want to delete this account.',\r\n        button: 'Delete'\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchAccount = async () => {\r\n            try {\r\n                const response = await sendRequest(\r\n                    `${API}/api/user/accounts/${accountId}`,\r\n                    'GET',\r\n                    {},\r\n                    {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                );\r\n                // setAccount(response.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        fetchAccount();\r\n    }, [token, accountId, sendRequest]);\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            const response = await sendRequest(\r\n                `http://localhost:3000/api/user/accounts/${accountId}`,\r\n                'DELETE',\r\n                {},\r\n\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            );\r\n            console.log(response)\r\n            // removeAccount(response.data._id)\r\n            closeDeleteModal()\r\n            history.replace(`/${user.userId}/accounts/`);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n    const openEditModal = () => {\r\n        setEditModalIsOpen(true);\r\n    };\r\n\r\n    const closeEditModal = () => {\r\n        setEditModalIsOpen(false);\r\n    };\r\n\r\n    const openDeleteModal = () => {\r\n        setDeleteModalIsOpen(true);\r\n    };\r\n\r\n    const closeDeleteModal = () => {\r\n        setDeleteModalIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal isOpen={editModalIsOpen} onRequestClose={closeEditModal}>\r\n                <EditAccount data={account} closeModal={closeEditModal} />\r\n            </Modal>\r\n            <Modal isOpen={deleteModalIsOpen} onRequestClose={closeDeleteModal}>\r\n                <DeleteModal\r\n                    closeModal={closeDeleteModal}\r\n                    onDelete={handleDelete}\r\n                    modalData={modalData}\r\n                />\r\n            </Modal>\r\n            {isLoading && <Loading />}\r\n            {!isLoading && (\r\n                <div>\r\n                    <h1>{accountName}</h1>\r\n                    <h2>${balance}</h2>\r\n                    <p>{description}</p>\r\n                    <ul>\r\n                        {strategies && strategies.length !== 0\r\n                            ? strategies.map((strategy) => (\r\n                                  <li>{strategy.name}</li>\r\n                              ))\r\n                            : 'Cannot find any strategies for this account'}\r\n                    </ul>\r\n                    <button onClick={openEditModal}>Edit</button>\r\n                    <button onClick={openDeleteModal}>Delete</button>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AccountDetails;\r\n","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Accounts.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Profile.js",["170","171","172"],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\NotFound.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Strategies.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Nav.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Hooks\\usePagination.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Loading.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Footer.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\UI\\ErrorMessage.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\UI\\Pagination.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Modals\\EditAccount.js",["173","174"],"import React, { useContext,} from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Loading from '../Loading';\r\nimport { useRequest } from '../../Hooks/useRequest';\r\nimport ErrorMessage from '../UI/ErrorMessage';\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst accountSchema = yup.object().shape({\r\n    accountName: yup.string().required(),\r\n    description: yup.string().required(),\r\n});\r\n\r\nconst NewTrade = (props) => {\r\n    const { user, token } = useSelector(state => state.authReducer);\r\n    const { isLoading, sendRequest } = useRequest();\r\n    const {accountName, description} = props.data\r\n    const { register, handleSubmit, formState, errors } = useForm({\r\n        resolver: yupResolver(accountSchema),\r\n        mode: 'onChange', defaultValues: {\r\n            accountName, description\r\n        }\r\n    });\r\n    const { isValid } = formState;\r\n    const history = useHistory();\r\n    const { userId, accountId} = useParams();\r\n\r\n\r\n    const onSubmit = async (data) => {\r\n        const formData = {\r\n            ...data,\r\n            trader: user.userId,\r\n        };\r\n        try {\r\n            const response = await sendRequest(\r\n                `${API}/api/user/accounts/${accountId}`,\r\n                'PATCH',\r\n                JSON.stringify(formData),\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            );\r\n            history.push(`/${userId}/accounts/${accountId}`)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && <Loading />}\r\n            {!isLoading && (\r\n                <div>\r\n                    <button onClick={props.closeModal}>X</button>\r\n\r\n                    <h1>Edit Account Details</h1>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <label htmlFor='accountName'>Account Name</label>\r\n                        <input name='accountName' ref={register} />\r\n                        {errors.symbol && (\r\n                            <ErrorMessage\r\n                                message={errors.accountName.message}\r\n                            />\r\n                        )}\r\n                        <label htmlFor='description'>Description</label>\r\n                        <textarea name='description' ref={register} />\r\n                        {errors.symbol && (\r\n                            <ErrorMessage\r\n                                message={errors.description.message}\r\n                            />\r\n                        )}\r\n\r\n                        <button disabled={!isValid} type='submit'>\r\n                            Create Account\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewTrade;\r\n","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Modals\\DeleteModal.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Modals\\NewAccount.js",["175","176"],"import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Loading from '../Loading';\r\nimport { useRequest } from '../../Hooks/useRequest';\r\nimport ErrorMessage from '../UI/ErrorMessage';\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst accountSchema = yup.object().shape({\r\n    accountName: yup.string().required(),\r\n    balance: yup.number().required(),\r\n    description: yup.string().required(),\r\n});\r\n\r\nconst NewTrade = (props) => {\r\n    //TODO: Basic form, or extended?\r\n    const { user, token, addAccount } = useSelector(state => state.authReducer);\r\n    const { isLoading, sendRequest } = useRequest();\r\n    const { register, handleSubmit, formState, errors } = useForm({\r\n        resolver: yupResolver(accountSchema),\r\n        mode: 'onChange',\r\n    });\r\n    const { isValid } = formState;\r\n    //TODO: Get the id from the actual user\r\n\r\n    const onSubmit = async (data) => {\r\n        const formData = {\r\n            ...data,\r\n            userId: user.userId,\r\n        };\r\n        try {\r\n            const response = await sendRequest(\r\n                `${API}/api/accounts`,\r\n                'POST',\r\n                JSON.stringify(formData),\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            );\r\n            // addAccount(response.data);\r\n\r\n            props.closeModal();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && <Loading />}\r\n            {!isLoading && (\r\n                <div>\r\n                    <button onClick={props.closeModal}>X</button>\r\n\r\n                    <h1>Create new account</h1>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <label htmlFor='accountName'>Account Name</label>\r\n                        <input name='accountName' ref={register} />\r\n                        {errors.symbol && (\r\n                            <ErrorMessage\r\n                                message={errors.accountName.message}\r\n                            />\r\n                        )}\r\n                        <label htmlFor='balance'>Account Balance</label>\r\n                        <input\r\n                            name='balance'\r\n                            type='number'\r\n                            step='0.01'\r\n                            ref={register}\r\n                        />\r\n                        {errors.symbol && (\r\n                            <ErrorMessage message={errors.balance.message} />\r\n                        )}\r\n                        <label htmlFor='description'>Description</label>\r\n                        <textarea name='description' ref={register} />\r\n                        {errors.symbol && (\r\n                            <ErrorMessage\r\n                                message={errors.description.message}\r\n                            />\r\n                        )}\r\n\r\n                        <button disabled={!isValid} type='submit'>\r\n                            Create Account\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewTrade;\r\n","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\UI\\PaginatedData.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\TradeItem.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Hooks\\useRequest.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Reducers\\tradeReducer.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Reducers\\authReducer.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\constants.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Store\\store.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Components\\Modals\\NewTrade.js",["177"],"import React, { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\n\r\nimport Loading from '../Loading';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { useRequest } from '../../Hooks/useRequest';\r\nimport ErrorMessage from '../UI/ErrorMessage';\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst basicTradeSchema = yup.object().shape({\r\n    symbol: yup.string().required(),\r\n    outcome: yup.string().required(),\r\n    bias: yup.string().required(),\r\n    amount: yup.number().required(),\r\n    account: yup.string().required(),\r\n    notes: yup.string(),\r\n    date: yup.date().required()\r\n});\r\n\r\nconst NewTrade = (props) => {\r\n    //TODO: Basic form, or extended?\r\n    const { user, token } = useSelector(state => state.authReducer);\r\n    const { accounts } = user;\r\n    const { isLoading, sendRequest } = useRequest();\r\n    const { register, handleSubmit, formState, errors} = useForm({\r\n        resolver: yupResolver(basicTradeSchema),\r\n        mode: 'onChange', defaultValues: {\r\n            notes: ''\r\n        }\r\n    });\r\n    const { isValid } = formState;\r\n\r\n    const onSubmit = async (data) => {\r\n        const formData = {\r\n            ...data,\r\n            trader: user.userId,\r\n        };\r\n        try {\r\n            const response = await sendRequest(\r\n                `${API}/api/trades/`,\r\n                'POST',\r\n                JSON.stringify(formData),\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            );\r\n            console.log(response);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && <Loading />}\r\n            {!isLoading && (\r\n                <div>\r\n                    <button onClick={props.closeModal}>X</button>\r\n\r\n                    <h1>New Trade</h1>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <label htmlFor='symbol'>Symbol</label>\r\n                        <input\r\n                            name='symbol'\r\n                            ref={register}\r\n                            placeholder='Trade symbol or ticker'\r\n                        />\r\n                        {errors.symbol && (\r\n                            <ErrorMessage message={errors.symbol.message} />\r\n                        )}\r\n                        <label htmlFor='account'>Account</label>\r\n                        <select name='account' ref={register}>\r\n                            {accounts &&\r\n                                accounts.map((account) => (\r\n                                    <option\r\n                                        key={account._id}\r\n                                        value={account._id}>\r\n                                        {account.accountName}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                        <label htmlFor='outcome'>Outcome</label>\r\n                        <select name='outcome' ref={register}>\r\n                            <option value='breakeven'>Breakeven</option>\r\n                            <option value='profit'>Profit</option>\r\n                            <option value='loss'>Loss</option>\r\n                        </select>\r\n                        <label htmlFor='bias'>Bias</label>\r\n                        <select name='bias' ref={register}>\r\n                            <option value='bullish'>Bullish</option>\r\n                            <option value='bearish'>Bearish</option>\r\n                        </select>\r\n\r\n                        <label htmlFor='amount'>Amount</label>\r\n                        <input\r\n                            type='number'\r\n                            step='0.01'\r\n                            name='amount'\r\n                            ref={register}\r\n                            placeholder='Profit or loss value'\r\n                        />\r\n                        {errors.amount && (\r\n                            <ErrorMessage message={errors.amount.message} />\r\n                        )}\r\n                        <label htmlFor='notes'>Notes</label>\r\n                        <textArea\r\n                            name='notes'\r\n                            ref={register}\r\n                            placeholder='Optional notes'\r\n                        />\r\n                        {errors.notes && (\r\n                            <ErrorMessage message={errors.notes.message} />\r\n                        )}\r\n                        <label htmlFor='date'>Notes</label>\r\n                        <input type='date' name='date' ref={register}></input>\r\n                        {errors.date && (\r\n                            <ErrorMessage message={errors.date.message} />\r\n                        )}\r\n                        <button disabled={!isValid} type='submit'>\r\n                            New Trade\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewTrade;\r\n","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\accountActions.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\authActions.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Services\\authService.js",["178"],"import axios from 'axios';\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport const loginUser = async (loginData, url) => {\r\n    const userData = await axios({\r\n        method: 'post',\r\n        url,\r\n        data: JSON.stringify(loginData),\r\n        headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    return userData;\r\n};\r\n","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Services\\storageService.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":29},{"ruleId":"183","severity":1,"message":"187","line":1,"column":28,"nodeType":"185","messageId":"186","endLine":1,"endColumn":38},{"ruleId":"183","severity":1,"message":"188","line":55,"column":19,"nodeType":"185","messageId":"186","endLine":55,"endColumn":27},{"ruleId":"183","severity":1,"message":"189","line":16,"column":21,"nodeType":"185","messageId":"186","endLine":16,"endColumn":31},{"ruleId":"183","severity":1,"message":"188","line":33,"column":23,"nodeType":"185","messageId":"186","endLine":33,"endColumn":31},{"ruleId":"183","severity":1,"message":"187","line":1,"column":38,"nodeType":"185","messageId":"186","endLine":1,"endColumn":48},{"ruleId":"183","severity":1,"message":"188","line":88,"column":19,"nodeType":"185","messageId":"186","endLine":88,"endColumn":27},{"ruleId":"183","severity":1,"message":"188","line":118,"column":19,"nodeType":"185","messageId":"186","endLine":118,"endColumn":27},{"ruleId":"183","severity":1,"message":"187","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":27},{"ruleId":"183","severity":1,"message":"188","line":39,"column":19,"nodeType":"185","messageId":"186","endLine":39,"endColumn":27},{"ruleId":"183","severity":1,"message":"190","line":20,"column":26,"nodeType":"185","messageId":"186","endLine":20,"endColumn":36},{"ruleId":"183","severity":1,"message":"188","line":35,"column":19,"nodeType":"185","messageId":"186","endLine":35,"endColumn":27},{"ruleId":"183","severity":1,"message":"187","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":27},{"ruleId":"183","severity":1,"message":"191","line":2,"column":7,"nodeType":"185","messageId":"186","endLine":2,"endColumn":10},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'MainContextProvider' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'response' is assigned a value but never used.","'setAccount' is assigned a value but never used.","'addAccount' is assigned a value but never used.","'API' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]