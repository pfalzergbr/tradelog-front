[{"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Store\\store.js":"1","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\authActions.js":"2","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Services\\storageService.js":"3","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\accountActions.js":"4","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Services\\Pagination.js":"5","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\constants.js":"6","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Services\\requestService.js":"7","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\strategyActions.js":"8","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\requestActions.js":"9","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\index.jsx":"10","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\App.jsx":"11","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Routers\\AppRouter.jsx":"12","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\NotFound.jsx":"13","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Trades\\Trades.jsx":"14","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Dashboard\\Dashboard.jsx":"15","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Strategies\\Strategies.jsx":"16","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Landing\\Landing.jsx":"17","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Login\\Login.jsx":"18","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Register\\Register.jsx":"19","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\Nav.jsx":"20","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Profile\\Profile.jsx":"21","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Trades\\TradeDetails.jsx":"22","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Accounts\\Accounts.jsx":"23","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Accounts\\AccountDetails.jsx":"24","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\Loading.jsx":"25","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\Footer.jsx":"26","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\ErrorMessage.jsx":"27","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Trades\\NewTrade.jsx":"28","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\DeleteModal.jsx":"29","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Hooks\\useRequest.jsx":"30","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Accounts\\NewAccount.jsx":"31","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Accounts\\EditAccount.jsx":"32","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Hooks\\usePagination.jsx":"33","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\PaginatedData.jsx":"34","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Trades\\TradeItem.jsx":"35","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Reducers\\auth.js":"36","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Reducers\\strategy.js":"37","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Reducers\\control.js":"38","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Reducers\\account.js":"39","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\loadActions.js":"40"},{"size":671,"mtime":1607677039394,"results":"41","hashOfConfig":"42"},{"size":858,"mtime":1607681631228,"results":"43","hashOfConfig":"42"},{"size":191,"mtime":1607423851104,"results":"44","hashOfConfig":"42"},{"size":1242,"mtime":1607694994177,"results":"45","hashOfConfig":"42"},{"size":928,"mtime":1607608321168,"results":"46","hashOfConfig":"42"},{"size":992,"mtime":1607693874594,"results":"47","hashOfConfig":"42"},{"size":479,"mtime":1607608321170,"results":"48","hashOfConfig":"42"},{"size":966,"mtime":1607689805986,"results":"49","hashOfConfig":"42"},{"size":198,"mtime":1607608321150,"results":"50","hashOfConfig":"42"},{"size":289,"mtime":1607608321172,"results":"51","hashOfConfig":"42"},{"size":502,"mtime":1607608321099,"results":"52","hashOfConfig":"42"},{"size":4346,"mtime":1607683284667,"results":"53","hashOfConfig":"42"},{"size":118,"mtime":1607608321131,"results":"54","hashOfConfig":"42"},{"size":2758,"mtime":1607680724181,"results":"55","hashOfConfig":"42"},{"size":776,"mtime":1607677406251,"results":"56","hashOfConfig":"42"},{"size":134,"mtime":1607608321134,"results":"57","hashOfConfig":"42"},{"size":393,"mtime":1607608321115,"results":"58","hashOfConfig":"42"},{"size":3301,"mtime":1607677263321,"results":"59","hashOfConfig":"42"},{"size":5047,"mtime":1607677403950,"results":"60","hashOfConfig":"42"},{"size":1830,"mtime":1607677144986,"results":"61","hashOfConfig":"42"},{"size":5571,"mtime":1607677278138,"results":"62","hashOfConfig":"42"},{"size":3700,"mtime":1607677398632,"results":"63","hashOfConfig":"42"},{"size":2403,"mtime":1607683968453,"results":"64","hashOfConfig":"42"},{"size":4648,"mtime":1607691162382,"results":"65","hashOfConfig":"42"},{"size":177,"mtime":1607608321128,"results":"66","hashOfConfig":"42"},{"size":710,"mtime":1607608321127,"results":"67","hashOfConfig":"42"},{"size":213,"mtime":1607608321125,"results":"68","hashOfConfig":"42"},{"size":5241,"mtime":1607677401361,"results":"69","hashOfConfig":"42"},{"size":1121,"mtime":1607608321124,"results":"70","hashOfConfig":"42"},{"size":1120,"mtime":1607608321103,"results":"71","hashOfConfig":"42"},{"size":3467,"mtime":1607689263207,"results":"72","hashOfConfig":"42"},{"size":3074,"mtime":1607677209628,"results":"73","hashOfConfig":"42"},{"size":1129,"mtime":1607608321101,"results":"74","hashOfConfig":"42"},{"size":564,"mtime":1607608321132,"results":"75","hashOfConfig":"42"},{"size":290,"mtime":1607608321140,"results":"76","hashOfConfig":"42"},{"size":895,"mtime":1607681393621,"results":"77","hashOfConfig":"42"},{"size":460,"mtime":1607689900913,"results":"78","hashOfConfig":"42"},{"size":1506,"mtime":1607694925771,"results":"79","hashOfConfig":"42"},{"size":709,"mtime":1607695045620,"results":"80","hashOfConfig":"42"},{"size":901,"mtime":1607684146703,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"13m6jtx",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Store\\store.js",[],["167","168"],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\authActions.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Services\\storageService.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\accountActions.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Services\\Pagination.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\constants.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Services\\requestService.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\strategyActions.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\requestActions.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\index.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\App.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Routers\\AppRouter.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\NotFound.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Trades\\Trades.jsx",["169","170","171","172","173"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nimport { usePagination } from '../../Hooks/usePagination';\r\nimport Pagination from '../../Services/Pagination';\r\n\r\nimport Loading from '../Shared/Loading';\r\nimport { useSelector } from 'react-redux';\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst Trades = (props) => {\r\n    const { user, token } = useSelector((state) => state.auth);\r\n    const { isLoading } = useSelector((state) => state.control);\r\n    const { accounts } = useSelector((state) => state.account);\r\n    const [ account, setAccount ] = useState(accounts[0].account_id || null);\r\n    // const { isLoading, sendRequest } = useRequest();\r\n    const { paginate, paginatedData, pageNumbers } = usePagination();\r\n    const history = useHistory();\r\n\r\n    console.log(account);\r\n    // useEffect(() => {\r\n    //     const fetchTrades = async () => {\r\n    //         try {\r\n    //             const response = await sendRequest(\r\n    //                 `${API}/api/trades/account/${account}`,\r\n    //                 'GET',\r\n    //                 {},\r\n    //                 { Authorization: `Bearer ${token}` },\r\n    //             );\r\n\r\n    //             paginate(response.data, 5);\r\n    //             history.push(`/${user.userId}/trades/page-1`);\r\n    //         } catch (error) {\r\n    //             console.log(error);\r\n    //         }\r\n    //     };\r\n    //     fetchTrades();\r\n    // }, [account, history, paginate, sendRequest, token, user.userId]);\r\n\r\n    const changeAccount = (event) => {\r\n        setAccount(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {account ? (\r\n                <select value={account} onChange={changeAccount}>\r\n                    {accounts.map((account) => (\r\n                        <option\r\n                            key={account.account_id}\r\n                            value={account.account_id}>\r\n                            {account.account_name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            ) : (\r\n                <div>\r\n                    <p>You haven`t got any accounts yet</p>\r\n                    <Link to={`/${user.userId}/accounts`}>Create one here</Link>\r\n                </div>\r\n            )}\r\n            {isLoading && <Loading />}\r\n            {!isLoading && (\r\n                <div>\r\n                    <Pagination\r\n                        data={paginatedData}\r\n                        pageNumbers={pageNumbers}\r\n                        userId={user.userId}\r\n                        itemType={'trade'}\r\n                    />\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Trades;\r\n","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Dashboard\\Dashboard.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Strategies\\Strategies.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Landing\\Landing.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Login\\Login.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Register\\Register.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\Nav.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Profile\\Profile.jsx",["174","175"],"import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport Modal from 'react-modal';\r\n\r\nimport DeleteModal from '../Shared/DeleteModal';\r\nimport ErrorMessage from '../Shared/ErrorMessage';\r\nimport Loading from '../Shared/Loading';\r\nimport { useSelector } from 'react-redux';\r\nimport { useRequest } from '../../Hooks/useRequest';\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst profileSchema = yup.object().shape({\r\n    name: yup.string().required(),\r\n    // email: yup.string().email().required(),\r\n    // verify: yup\r\n    //     .string()\r\n    //     .oneOf(\r\n    //         [yup.ref('password'), null],\r\n    //         'Confirmation has to match your password',\r\n    //     )\r\n    //     .required(),\r\n});\r\n\r\nconst Profile = (props) => {\r\n    const { user, token } = useSelector(state => state.auth);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const { isLoading, sendRequest } = useRequest();\r\n    const [userProfile, setUserProfile] = useState({});\r\n    const { name, email } = userProfile;\r\n    const history = useHistory();\r\n\r\n    const { register, handleSubmit, errors, reset } = useForm({\r\n        resolver: yupResolver(profileSchema),\r\n        mode: 'onTouched',\r\n        defaultValues: {\r\n            name: name,\r\n            email: email,\r\n        },\r\n    });\r\n    \r\n    // Modal Data to pass down.\r\n    const modalData = {\r\n        header: 'Warning',\r\n        message:\r\n            'You are about to delete your user. This action cannot be reversed, and removes all your accounts, trades, Are you sure you want to go ahead? ',\r\n        label: 'If you are sure to proceed, please tick this box to confirm',\r\n        button: 'Delete'\r\n        };\r\n\r\n\r\n    // Fetching User Profile and loads into userProfile variable in state.\r\n    useEffect(() => {\r\n        const fetchUserProfile = async () => {\r\n            try {\r\n                const response = await sendRequest(\r\n                    `${API}/api/user/profile`,\r\n                    'GET',\r\n                    {},\r\n                    {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                );\r\n                setUserProfile(response.data[0]);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchUserProfile();\r\n    }, [ sendRequest, token ]);\r\n\r\n    //Populates the form with data from user profile\r\n    useEffect(() => {\r\n        if (userProfile) {\r\n            reset({\r\n                name,\r\n                email,\r\n            });\r\n        }\r\n    }, [userProfile, email, name, reset]);\r\n\r\n    // Sends a delete request to the API. This function is passed to the modal, executable from there. \r\n    const deleteUser = async () => {\r\n        try {\r\n            const response = await sendRequest(\r\n                `http://localhost:3000/api/user/profile/${user.userId}`,\r\n                'DELETE',\r\n                {},\r\n\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            );\r\n            // logout();\r\n            history.replace(`/`);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    // Modal Open/Close Controls\r\n    const openModal = () => {\r\n        setModalIsOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const response = await sendRequest(\r\n                `${API}/api/user/profile/`,\r\n                'PATCH',\r\n                JSON.stringify(data),\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            );\r\n            history.push(`/${user.userId}/dashboard`)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && <Loading />}\r\n            {!isLoading && (\r\n                <React.Fragment>\r\n                    <Modal isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n                        <DeleteModal\r\n                            closeModal={closeModal}\r\n                            modalData={modalData}\r\n                            onDelete={deleteUser}\r\n                        />\r\n                    </Modal>\r\n                    <h1>Edit Profile</h1>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <label htmlFor='name'>Name</label>\r\n                        <input name='name' ref={register} />\r\n                        {errors.name && (\r\n                            <ErrorMessage message={errors.name.message} />\r\n                        )}\r\n                        {// <label htmlFor='email'>E-mail</label>\r\n                        // <input name='email' ref={register} />\r\n                        // {errors.email && (\r\n                        //     <ErrorMessage message={errors.email.message} />\r\n                        // )}\r\n                        }<button>Save Changes</button>\r\n                    </form>\r\n                    <button onClick={openModal}>Delete</button>\r\n                </React.Fragment>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Trades\\TradeDetails.jsx",["176"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\n\r\nimport Loading from '../Shared/Loading';\r\nimport DeleteModal from '../Shared/DeleteModal';\r\nimport { useSelector } from 'react-redux';\r\nimport { useRequest } from '../../Hooks/useRequest';\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst TradeDetails = (props) => {\r\n    const { token, user } = useSelector((state) => state.auth);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const { isLoading, sendRequest } = useRequest();\r\n    const [trade, setTrade] = useState({});\r\n    const { tradeId } = useParams();\r\n    const { symbol, outcome, amount } = trade;\r\n    const history = useHistory();\r\n\r\n    //Modal Data passed in the Delete Modal.\r\n    const modalData = {\r\n        header: `Warning`,\r\n        message:\r\n            ' Please only delete the trade if you had an input mistake. Deleting trades from your record changes your statistics, and distorts your real performance.',\r\n        note: 'Note: You cannot reverse this action once you deleted the trade',\r\n        label: 'Yes, I want to delete this trade',\r\n        button: 'Delete',\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchTrade = async () => {\r\n            try {\r\n                const response = await sendRequest(\r\n                    `${API}/api/trades/${tradeId}`,\r\n                    'GET',\r\n                    {},\r\n                    {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                );\r\n                setTrade(response.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        fetchTrade();\r\n    }, [sendRequest, token, tradeId]);\r\n\r\n    //Sends a delete trade request to the API. Passed down and called in the Modal.\r\n    const handleDelete = async () => {\r\n        try {\r\n            const response = await sendRequest(\r\n                `http://localhost:3000/api/trades/${tradeId}`,\r\n                'DELETE',\r\n                {},\r\n\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            );\r\n            history.replace(`/${user.userId}/trades/`);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    //Modal Open-Close Handlers\r\n    const openModal = () => {\r\n        setModalIsOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && <Loading />}\r\n            {!isLoading && (\r\n                <div>\r\n                    <Modal isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n                        <DeleteModal\r\n                            closeModal={closeModal}\r\n                            onDelete={handleDelete}\r\n                            modalData={modalData}\r\n                        />\r\n                    </Modal>\r\n                    <h1>TradeDetails</h1>\r\n                    <h2>{symbol}</h2>\r\n                    <p>{outcome}</p>\r\n                    <span>{amount}</span>\r\n                    <button>Edit Details</button>\r\n                    <button\r\n                        onClick={() => {\r\n                            history.go(-1);\r\n                        }}>\r\n                        Back\r\n                    </button>\r\n                    <button onClick={openModal}>Delete</button>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TradeDetails;\r\n","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Accounts\\Accounts.jsx",["177","178"],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Accounts\\AccountDetails.jsx",["179","180","181","182"],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\Loading.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\Footer.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\ErrorMessage.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Trades\\NewTrade.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\DeleteModal.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Hooks\\useRequest.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Accounts\\NewAccount.jsx",["183"],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Accounts\\EditAccount.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Hooks\\usePagination.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Shared\\PaginatedData.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Pages\\Trades\\TradeItem.jsx",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Reducers\\auth.js",["184"],"import {\r\n    LOGIN_PENDING,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    LOAD_USER,\r\n} from '../constants';\r\n\r\nconst initialState = {\r\n    user: {\r\n        userName: null,\r\n        userId: null,\r\n    },\r\n    token: null,\r\n};\r\n\r\nexport const auth = (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case LOGIN_FAIL:\r\n            return { ...state, error: action.payload };\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n            };\r\n        case LOAD_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n            };\r\n        case LOGOUT:\r\n            return { ...initialState };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Reducers\\strategy.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Reducers\\control.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Reducers\\account.js",[],"C:\\Projects\\active\\own\\tradelog-app\\tradelog-front\\src\\Redux\\Actions\\loadActions.js",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"193","line":9,"column":7,"nodeType":"191","messageId":"192","endLine":9,"endColumn":10},{"ruleId":"189","severity":1,"message":"194","line":12,"column":19,"nodeType":"191","messageId":"192","endLine":12,"endColumn":24},{"ruleId":"189","severity":1,"message":"195","line":17,"column":13,"nodeType":"191","messageId":"192","endLine":17,"endColumn":21},{"ruleId":"189","severity":1,"message":"196","line":18,"column":11,"nodeType":"191","messageId":"192","endLine":18,"endColumn":18},{"ruleId":"189","severity":1,"message":"197","line":88,"column":19,"nodeType":"191","messageId":"192","endLine":88,"endColumn":27},{"ruleId":"189","severity":1,"message":"197","line":118,"column":19,"nodeType":"191","messageId":"192","endLine":118,"endColumn":27},{"ruleId":"189","severity":1,"message":"197","line":54,"column":19,"nodeType":"191","messageId":"192","endLine":54,"endColumn":27},{"ruleId":"189","severity":1,"message":"193","line":9,"column":7,"nodeType":"191","messageId":"192","endLine":9,"endColumn":10},{"ruleId":"189","severity":1,"message":"198","line":12,"column":11,"nodeType":"191","messageId":"192","endLine":12,"endColumn":19},{"ruleId":"189","severity":1,"message":"193","line":9,"column":7,"nodeType":"191","messageId":"192","endLine":9,"endColumn":10},{"ruleId":"189","severity":1,"message":"196","line":13,"column":11,"nodeType":"191","messageId":"192","endLine":13,"endColumn":18},{"ruleId":"189","severity":1,"message":"194","line":17,"column":13,"nodeType":"191","messageId":"192","endLine":17,"endColumn":18},{"ruleId":"189","severity":1,"message":"199","line":17,"column":20,"nodeType":"191","messageId":"192","endLine":17,"endColumn":24},{"ruleId":"189","severity":1,"message":"199","line":21,"column":13,"nodeType":"191","messageId":"192","endLine":21,"endColumn":17},{"ruleId":"189","severity":1,"message":"200","line":2,"column":5,"nodeType":"191","messageId":"192","endLine":2,"endColumn":18},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'API' is assigned a value but never used.","'token' is assigned a value but never used.","'paginate' is assigned a value but never used.","'history' is assigned a value but never used.","'response' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","'LOGIN_PENDING' is defined but never used.","no-global-assign","no-unsafe-negation"]